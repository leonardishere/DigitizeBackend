AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: CodeStar projectId used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    Environment:
      Variables:
        CONNECTIONS_TABLE: !Ref DigitizeConnections
        BROADCAST_TOPIC: !Ref BroadcastTopic
  Api:
    # Allows an application running at https://digitize.aleonard.dev to call this API
    Cors:
      AllowMethods: "'OPTIONS,POST,GET'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'" #"'https://digitize.aleonard.dev','localhost'"

Resources:
  # API
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: DigitizeRestAPI
      Domain:
        DomainName: digitize-api1.aleonard.dev
        CertificateArn: arn:aws:acm:us-west-2:917159232232:certificate/ba2d0a69-0de2-44ff-b3bd-e3acef4c9122
        Route53:
          HostedZoneId: Z21QA4NBX4IRX8
      StageName: prod
      TracingEnabled: true
  # Functions
  OptionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeOptions
      Handler: api/options.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: options
            RestApiId: !Ref RestApi
  # Functions - Students
  StudentsGetAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeStudentsGetAll
      Handler: api/students/get.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /students/
            Method: get
            RestApiId: !Ref RestApi
  StudentsPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeStudentsPost
      Handler: api/students/post.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /students/
            Method: post
            RestApiId: !Ref RestApi
  StudentsGetCardIDFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeStudentsGetCardID
      Handler: api/students/cardid/get.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /students/cardid/{CardID}/
            Method: get
            RestApiId: !Ref RestApi
  StudentsGetStudentIDFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeStudentsGetStudentID
      Handler: api/students/studentid/get.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /students/studentid/{StudentID}/
            Method: get
            RestApiId: !Ref RestApi
  # Functions - Checkins
  CheckinsActiveGetAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeCheckinsActiveGetAll
      Handler: api/checkins/active/get.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /checkins/active/
            Method: get
            RestApiId: !Ref RestApi
  CheckinsPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeCheckinsActivePost
      Handler: api/checkins/post.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /checkins/
            Method: post
            RestApiId: !Ref RestApi
  CheckinsActiveGetCardReaderIDFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeCheckinsActiveGetCardReaderID
      Handler: api/checkins/active/cardreaderid/get.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /checkins/active/cardreaderid/{CardReaderID}/
            Method: get
            RestApiId: !Ref RestApi
  CheckinsActiveGetCardIDFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeCheckinsActiveGetCardID
      Handler: api/checkins/active/cardid/get.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /checkins/active/cardid/{CardID}/
            Method: get
            RestApiId: !Ref RestApi
  CheckinsInactiveGetAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeCheckinsInactiveGetAll
      Handler: api/checkins/inactive/get.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /checkins/inactive/
            Method: get
            RestApiId: !Ref RestApi
  CheckoutAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DigitizeCheckoutAll
      Handler: api/checkout/post.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /checkout/
            Method: post
            RestApiId: !Ref RestApi
  # IAM Role
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - arn:aws:iam::917159232232:policy/XRayPutTraceSegments
        - arn:aws:iam::917159232232:policy/DynamoDBCRUD
      #PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
  # Tables
  DigitizeStudents:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: DigitizeStudents
      AttributeDefinitions:
        - AttributeName: CardID
          AttributeType: S
        - AttributeName: StudentID
          AttributeType: S
      KeySchema:
        - AttributeName: CardID
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: StudentID
          KeySchema:
            - AttributeName: StudentID
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Project
          Value: Digitize
        - Key: Name
          Value: DigitizeStudents
  DigitizeActiveCheckins:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: DigitizeActiveCheckins
      AttributeDefinitions:
        - AttributeName: CardReaderID
          AttributeType: N
        - AttributeName: CardID
          AttributeType: S
      KeySchema:
        - AttributeName: CardReaderID
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: CardID
          KeySchema:
            - AttributeName: CardID
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Project
          Value: Digitize
        - Key: Name
          Value: DigitizeActiveCheckins
    DependsOn: DigitizeStudents # multiple GSIs require serial creation
  DigitizeInactiveCheckins:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: DigitizeInactiveCheckins
      AttributeDefinitions:
        - AttributeName: StudentID
          AttributeType: S
        - AttributeName: CheckinTime
          AttributeType: N
      KeySchema:
        - AttributeName: StudentID
          KeyType: HASH
        - AttributeName: CheckinTime
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Project
          Value: Digitize
        - Key: Name
          Value: DigitizeInactiveCheckins
    DependsOn: DigitizeActiveCheckins # multiple GSIs require serial creation
  # Websocket API
  DigitizeWebSocketAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: DigitizeWebSocketAPI
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.message"
  #WebSocketDNS:
  #  Type: AWS::Route53::RecordSet # AWS::ApiGatewayV2::DomainName
  #  Properties:
  #    Name: 'digitize-api2.aleonard.dev'
  #    AliasTarget:
  #      DNSName: !Join ['', [!Ref 'DigitizeWebSocketAPI', '.execute-api.us-west-2.amazonaws.com.']]
  #      HostedZoneId: Z2OJLYMUO9EFXC
  #    HostedZoneName: aleonard.dev.
  #    Type: A
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref DigitizeWebSocketAPI
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref DigitizeWebSocketAPI
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref DigitizeWebSocketAPI
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref DigitizeWebSocketAPI
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref DigitizeWebSocketAPI
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendInteg
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref DigitizeWebSocketAPI
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - SendRoute
    - DisconnectRoute
    Properties:
      ApiId: !Ref DigitizeWebSocketAPI
  GWStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref DigitizeWebSocketAPI
  DigitizeConnections:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "connectionId"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "connectionId"
        KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Project
          Value: Digitize
        - Key: Name
          Value: DigitizeConnections
      TableName: DigitizeConnections
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: onconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName: DigitizeConnections
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - DigitizeWebSocketAPI
      - OnConnectFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ondisconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName: DigitizeConnections
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - DigitizeWebSocketAPI
      - OnDisconnectFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SendMessageFunction
      Handler: sendmessage/post.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Environment:
        Variables:
          TABLE_NAME: DigitizeConnections
      Policies:
      - DynamoDBCrudPolicy:
          TableName: DigitizeConnections
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${DigitizeWebSocketAPI}/*'
  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - DigitizeWebSocketAPI
      - SendMessageFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendMessageFunction
      Principal: apigateway.amazonaws.com

  BroadcastFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: Broadcast
      Handler: broadcast.handler
      Runtime: python3.7
      MemorySize: 128
      Tracing: Active
      Timeout: 20
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
  BroadcastTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Digitize
      Tags:
        - Key: Project
          Value: Digitize
        - Key: Name
          Value: DigitizeBroadcasts
      TopicName: DigitizeBroadcasts
  BroadcastSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      Endpoint: !GetAtt BroadcastFunction.Arn
      TopicArn: !Ref BroadcastTopic

Outputs:
  ConnectionsTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt DigitizeConnections.Arn

  OnConnectFunctionArn:
    Description: "OnConnect function ARN"
    Value: !GetAtt OnConnectFunction.Arn

  OnDisconnectFunctionArn:
    Description: "OnDisconnect function ARN"
    Value: !GetAtt OnDisconnectFunction.Arn

  SendMessageFunctionArn:
    Description: "SendMessage function ARN"
    Value: !GetAtt SendMessageFunction.Arn

  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value: !Join [ '', [ 'wss://', !Ref DigitizeWebSocketAPI, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]
